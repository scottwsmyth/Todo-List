{"version":3,"sources":["Form.js","TodoItem.js","TodoList.js","App.js","index.js"],"names":["Form","props","state","task","handleChange","bind","handleSubmit","evt","console","log","target","value","this","setState","preventDefault","stopPropagation","item","id","uuid","addTodoItem","className","onSubmit","htmlFor","type","onChange","name","placeholder","Component","TodoItem","updateTask","handleEditInput","handleEditItem","editState","deleteTodoItem","editTodoItem","action","style","width","display","onClick","icon","faPen","handleDeleteItem","faTrash","TodoList","Todos","newTodos","filter","todo","map","taskArr","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b26b644.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport \"./Form.css\"\nimport uuid from \"uuid/v4\"\n\nexport default class Form extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { task: \"\" };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(evt) {\n        console.log(evt.target.value);\n        this.setState({task: evt.target.value});\n    }\n\n    handleSubmit(evt) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        let item = { ...this.state, id: uuid() };\n        this.props.addTodoItem(item);\n    }\n\n    render() {\n        return (\n            <form className=\"Form form-group\" onSubmit={this.handleSubmit}>\n                \n                <label\n                    id=\"taskLabel\"\n                    htmlFor=\"newTask\">New Todo</label>\n        \n                <hr></hr>\n\n                <input\n                    type=\"text\"\n                    onChange={this.handleChange}\n                    className=\"form-control\"\n                    name=\"newTask\"\n                    id=\"newTask\"\n                    placeholder=\"Task...\"\n                    />\n                <button\n                    type=\"submit\"\n                    id=\"submit\"\n                    className=\"btn btn-primary\">Add</button>\n            </form>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport \"./TodoItem.css\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash, faPen } from '@fortawesome/free-solid-svg-icons'\n\n\n\nexport default class TodoItem extends Component {\n\n    constructor(props) {\n        super(props);\n        this.updateTask = this.updateTask.bind(this);\n        this.handleEditInput = this.handleEditInput.bind(this);\n        this.handleEditItem = this.handleEditItem.bind(this);\n        this.state = { editState: false, \n            task: \"\" };\n            \n    }\n    \n    handleDeleteItem() {\n        this.props.deleteTodoItem(this.props.id);\n    }\n\n    updateTask(evt) {\n        this.setState({...this.state, task: evt.target.value})\n    }\n\n    handleEditItem() {\n        this.setState({ editState: true });\n    }\n\n    handleEditInput() {\n        let id = this.props.id;\n        let task = this.state.task;\n        this.props.editTodoItem(id, task);\n        this.setState({ editState: false });\n    }\n\n    render() {\n\n        if (this.state.editState === true) {\n            return (\n                <div>\n                    <form action=\"\">\n                        <div className=\"form-group\">\n                            <input\n                                style={{ width: \"50%\", display:\"inline-block\"}}\n                                type=\"text\"\n                                className=\"form-control\"\n                                onChange={this.updateTask}\n                                name=\"editTask\"\n                                id=\"editTask\"\n                                placeholder=\"New task...\" />\n                            <button onClick={this.handleEditInput} style={{display: \"inline-block\"}} type=\"button\" className=\"btn btn-primary\">Save</button>\n                        </div>\n                    </form>\n                </div>)\n            \n        } else {\n            return (\n                <li style={{ display: \"block\" }}>\n                    <div className=\"listItem\" >{this.props.task}\n                        <div className=\"flexToEnd\">\n                        <FontAwesomeIcon\n                            onClick={this.handleEditItem}\n                            icon={faPen}\n                            className=\"pen\" />\n                        <FontAwesomeIcon \n                            onClick={() => this.handleDeleteItem()}\n                            icon={faTrash} />\n                        </div>\n                    </div>\n                </li>\n            )\n        }\n    }\n}\n","import React, { Component } from 'react'\nimport Form from \"./Form\"\nimport \"./TodoList.css\"\nimport TodoItem from './TodoItem'\n\nclass TodoList extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {Todos:[{id: \"\", task: \"\"}]};\n        this.addTodoItem = this.addTodoItem.bind(this);\n        this.deleteTodoItem = this.deleteTodoItem.bind(this);\n        this.editTodoItem = this.editTodoItem.bind(this);\n    }\n\n    addTodoItem(item) {\n        this.setState({ Todos: [...this.state.Todos, item] });\n    }\n\n    deleteTodoItem(id) {\n        let newTodos = this.state.Todos.filter(todo => todo.id !== id)\n        this.setState({ Todos: newTodos });\n    }\n\n    editTodoItem(id, task) {\n        let newTodos = this.state.Todos.map(todo => {\n            if (todo.id === id) {\n                return {...todo, task: task}\n            }\n            return todo;\n        });\n\n        this.setState({Todos: newTodos})\n    }\n    \n    render() {\n\n        let taskArr = this.state.Todos.filter(task => task.id !== \"\").map(task => (<TodoItem\n            key={task.id}\n            id={task.id}\n            task={task.task}\n            deleteTodoItem={this.deleteTodoItem}\n            editTodoItem={this.editTodoItem}/>));\n    \n            return (\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h1>ToDo List</h1>\n                        <h5>Tasks</h5>\n                        <hr></hr>\n                        <ul className=\"list\">\n                        {taskArr}\n                        </ul>\n                        <Form addTodoItem={this.addTodoItem}/>\n                    </div>\n                </div>\n            )\n    }\n}\n\nexport default TodoList;\n\n","import React from 'react';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport TodoList from \"./TodoList\"\n\nfunction App() {\n  return (\n    <TodoList />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}